// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.1
// source: mqtt.proto

package v1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TransportMqttClient is the client API for TransportMqtt service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TransportMqttClient interface {
}

type transportMqttClient struct {
	cc grpc.ClientConnInterface
}

func NewTransportMqttClient(cc grpc.ClientConnInterface) TransportMqttClient {
	return &transportMqttClient{cc}
}

// TransportMqttServer is the server API for TransportMqtt service.
// All implementations must embed UnimplementedTransportMqttServer
// for forward compatibility
type TransportMqttServer interface {
	mustEmbedUnimplementedTransportMqttServer()
}

// UnimplementedTransportMqttServer must be embedded to have forward compatible implementations.
type UnimplementedTransportMqttServer struct {
}

func (UnimplementedTransportMqttServer) mustEmbedUnimplementedTransportMqttServer() {}

// UnsafeTransportMqttServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TransportMqttServer will
// result in compilation errors.
type UnsafeTransportMqttServer interface {
	mustEmbedUnimplementedTransportMqttServer()
}

func RegisterTransportMqttServer(s grpc.ServiceRegistrar, srv TransportMqttServer) {
	s.RegisterService(&TransportMqtt_ServiceDesc, srv)
}

// TransportMqtt_ServiceDesc is the grpc.ServiceDesc for TransportMqtt service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TransportMqtt_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "transport.mqtt.v1.TransportMqtt",
	HandlerType: (*TransportMqttServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "mqtt.proto",
}
